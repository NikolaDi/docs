import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as t,o as l,c,a as e,d as a,b as d,e as n}from"./app-5e987558.js";const o={},r=n(`<h2 id="一、编译时开启openssl特性" tabindex="-1"><a class="header-anchor" href="#一、编译时开启openssl特性" aria-hidden="true">#</a> 一、编译时开启openssl特性</h2><p>zlmediakit的https(另外还包括rtmps/rtsps/webrtc/wss)功能依赖openssl库，在编译zlmediakit时，应该先在系统默认环境安装openssl库，ubuntu下通过以下命令安装：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libssl-dev
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果您的系统默认openssl版本太老，可以选择自行编译安装openssl到自定义路径；此时，在编译zlmediakit时可以通过以下命令指定openssl自定义安装路径：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ZLMediaKit
<span class="token function">mkdir</span> build
<span class="token builtin class-name">cd</span> build
cmake <span class="token punctuation">..</span> <span class="token parameter variable">-DOPENSSL_ROOT_DIR</span><span class="token operator">=</span>/path/to/your/new/openssl/install/root/dir
<span class="token function">make</span> -j<span class="token variable"><span class="token variable">$(</span>nproc<span class="token variable">)</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、创建证书" tabindex="-1"><a class="header-anchor" href="#二、创建证书" aria-hidden="true">#</a> 二、创建证书</h2>`,6),u={href:"https://github.com/ZLMediaKit/ZLMediaKit/wiki/%E7%94%9F%E6%88%90SSL%E8%87%AA%E7%AD%BE%E5%90%8D%E8%AF%81%E4%B9%A6%E5%B9%B6%E6%B5%8B%E8%AF%95",target:"_blank",rel:"noopener noreferrer"},p=e("code",null,"default.pem",-1),g=e("li",null,[e("p",null,[e("strong",null,"如果你已经购买域名，以阿里云为例，你可以选择为您的域名申请免费证书：")])],-1),m=n(`<figure><img src="https://user-images.githubusercontent.com/11495632/191882967-7a823548-8eb2-4419-bb3a-51a4dfef5c4e.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ul><li><strong>申请免费证书额度后，可以点击<code>创建证书</code>按钮，在弹出页面输入您的域名：</strong></li></ul><figure><img src="https://user-images.githubusercontent.com/11495632/191883407-29b22a27-0763-452d-9e26-0d32f718b196.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ul><li><strong>点击下一步后提交审核:</strong></li></ul><figure><img src="https://user-images.githubusercontent.com/11495632/191883676-e4315e6b-2d77-488c-a433-cb156fb75af9.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h2 id="三、下载证书并合并为zlmediakit支持的证书类型" tabindex="-1"><a class="header-anchor" href="#三、下载证书并合并为zlmediakit支持的证书类型" aria-hidden="true">#</a> 三、下载证书并合并为zlmediakit支持的证书类型：</h2><ul><li><strong>下载证书：</strong></li></ul><figure><img src="https://user-images.githubusercontent.com/11495632/191883919-ea64f77f-c170-4cc2-8284-04b386e2dea4.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ul><li><strong>选择下载nginx或其他方式都可(两者证书类型一样)：</strong></li></ul><figure><img src="https://user-images.githubusercontent.com/11495632/191884016-87192a79-8816-4ab0-b05c-b4384e26aa60.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ul><li><strong>解压下载压缩包后文件如下</strong>：</li></ul><img width="760" alt="图片" src="https://user-images.githubusercontent.com/11495632/191884186-3c09f0ed-0042-417c-a8dc-ad87c4c0c1ed.png"><ul><li>key后缀的文件是私钥，pem后缀的文件为公钥，两者可以使用文本编辑器打开，它们都是base64编码的字符串，两个字符串拼接在一起后就是zlmediakit支持的证书文件类型了：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#进入文件夹</span>
<span class="token builtin class-name">cd</span> 8516590_test.zlmediakit.com_nginx
<span class="token comment">#合并公钥私钥</span>
<span class="token function">cat</span> 8516590_test.zlmediakit.com.key 8516590_test.zlmediakit.com.pem <span class="token operator">&gt;</span> default.pem
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、zlmediakit加载证书" tabindex="-1"><a class="header-anchor" href="#四、zlmediakit加载证书" aria-hidden="true">#</a> 四、zlmediakit加载证书</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#进入zlmediakit编译后的二进制目录(不同平台路径有所不同)</span>
<span class="token builtin class-name">cd</span> ~/git/ZLMediaKit/release/darwin/Debug/

<span class="token comment">#把合并后的证书拷贝过来</span>
<span class="token function">cp</span> ~/Downloads/8516590_test.zlmediakit.com_nginx/default.pem ./

<span class="token comment">#启动进程</span>
./MediaServer <span class="token parameter variable">-s</span> default.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://user-images.githubusercontent.com/11495632/191885188-62cb4e02-3dbb-4142-a852-22a359a63680.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h2 id="五、测试" tabindex="-1"><a class="header-anchor" href="#五、测试" aria-hidden="true">#</a> 五、测试</h2><ul><li>如果你的开发机的ip并不是证书绑定域名映射映射的ip，那么可以通过修改host文件来实现测试, 以linux/mac为例：</li></ul><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#打开host文件</span>
<span class="token function">sudo</span> <span class="token function">vi</span> /etc/hosts
<span class="token comment">#新增内容(本机ip+空格+你的域名)</span>
<span class="token number">127.0</span>.0.1  test.zlmediakit.com
<span class="token comment">#修改后保存退出vi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>打开浏览器输入https地址测试：</strong></li></ul><figure><img src="https://user-images.githubusercontent.com/11495632/191885959-5a20f3f7-0b39-4a06-bfaa-35b7a00427b4.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><ul><li><strong>查看证书：</strong></li></ul><figure><img src="https://user-images.githubusercontent.com/11495632/191886289-9c157ea0-2d61-4502-bda6-950832f73a75.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><h2 id="六、部署线上环境" tabindex="-1"><a class="header-anchor" href="#六、部署线上环境" aria-hidden="true">#</a> 六、部署线上环境</h2><ul><li>以上5步都走完了，验证通过，那么我们接下来可以部署线上环境；部署线上环境只需要把证书绑定的域名解析到您云主机的真实公网ip即可：</li></ul><figure><img src="https://user-images.githubusercontent.com/11495632/191887091-13b52373-12bc-4c54-8344-19e3c85d2337.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure><figure><img src="https://user-images.githubusercontent.com/11495632/191887411-864e2fd7-9b9a-44e6-9f69-026aac313323.png" alt="图片" tabindex="0" loading="lazy"><figcaption>图片</figcaption></figure>`,28);function b(h,f){const s=t("ExternalLinkIcon");return l(),c("div",null,[r,e("ul",null,[e("li",null,[e("p",null,[a("如果你还没购买域名，可以使用"),e("a",u,[a("自签名证书"),d(s)]),a("或zlmediakit自带默认证书"),p,a("测试。")])]),g]),m])}const _=i(o,[["render",b],["__file","how_to_enable_https_related_functions.html.vue"]]);export{_ as default};
