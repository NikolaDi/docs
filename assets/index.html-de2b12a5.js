import{_ as d}from"./plugin-vue_export-helper-c27b6911.js";import{r as n,o as c,c as h,a as e,b as i,d as l,w as a,e as o}from"./app-ceaceb0e.js";const p={},u=e("h1",{id:"一个基于c-11的高性能运营级流媒体服务框架",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#一个基于c-11的高性能运营级流媒体服务框架","aria-hidden":"true"},"#"),l(" 一个基于C++11的高性能运营级流媒体服务框架")],-1),_={href:"https://github.com/ZLMediaKit/ZLMediaKit/blob/master/LICENSE",target:"_blank",rel:"noopener noreferrer"},m=e("img",{src:"https://img.shields.io/badge/license-MIT-green.svg",alt:"",loading:"lazy"},null,-1),b=e("br",null,null,-1),g={href:"https://en.cppreference.com/",target:"_blank",rel:"noopener noreferrer"},f=e("img",{src:"https://img.shields.io/badge/language-c++-red.svg",alt:"",loading:"lazy"},null,-1),k=e("br",null,null,-1),M={href:"https://github.com/ZLMediaKit/ZLMediaKit",target:"_blank",rel:"noopener noreferrer"},T=e("img",{src:"https://img.shields.io/badge/platform-linux | macos | windows-blue.svg",alt:"",loading:"lazy"},null,-1),S=e("br",null,null,-1),P={href:"https://github.com/ZLMediaKit/ZLMediaKit/pulls",target:"_blank",rel:"noopener noreferrer"},L=e("img",{src:"https://img.shields.io/badge/PRs-welcome-yellow.svg",alt:"",loading:"lazy"},null,-1),v={href:"https://github.com/ZLMediaKit/ZLMediaKit",target:"_blank",rel:"noopener noreferrer"},R=e("img",{src:"https://github.com/ZLMediaKit/ZLMediaKit/actions/workflows/android.yml/badge.svg",alt:"",loading:"lazy"},null,-1),w=e("br",null,null,-1),H={href:"https://github.com/ZLMediaKit/ZLMediaKit",target:"_blank",rel:"noopener noreferrer"},K=e("img",{src:"https://github.com/ZLMediaKit/ZLMediaKit/actions/workflows/linux.yml/badge.svg",alt:"",loading:"lazy"},null,-1),Z=e("br",null,null,-1),z={href:"https://github.com/ZLMediaKit/ZLMediaKit",target:"_blank",rel:"noopener noreferrer"},x=e("img",{src:"https://github.com/ZLMediaKit/ZLMediaKit/actions/workflows/macos.yml/badge.svg",alt:"",loading:"lazy"},null,-1),C=e("br",null,null,-1),A={href:"https://github.com/ZLMediaKit/ZLMediaKit",target:"_blank",rel:"noopener noreferrer"},y=e("img",{src:"https://github.com/ZLMediaKit/ZLMediaKit/actions/workflows/windows.yml/badge.svg",alt:"",loading:"lazy"},null,-1),G={href:"https://hub.docker.com/r/zlmediakit/zlmediakit/tags",target:"_blank",rel:"noopener noreferrer"},O=e("img",{src:"https://github.com/ZLMediaKit/ZLMediaKit/actions/workflows/docker.yml/badge.svg",alt:"",loading:"lazy"},null,-1),I=e("br",null,null,-1),V={href:"https://hub.docker.com/r/zlmediakit/zlmediakit/tags",target:"_blank",rel:"noopener noreferrer"},U=e("img",{src:"https://img.shields.io/docker/pulls/zlmediakit/zlmediakit",alt:"",loading:"lazy"},null,-1),W=e("h2",{id:"项目特点",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#项目特点","aria-hidden":"true"},"#"),l(" 项目特点")],-1),D=e("li",null,"基于C++11开发，避免使用裸指针，代码稳定可靠，性能优越。",-1),E=e("li",null,"支持多种协议(RTSP/RTMP/HLS/HTTP-FLV/WebSocket-FLV/GB28181/HTTP-TS/WebSocket-TS/HTTP-fMP4/WebSocket-fMP4/MP4/WebRTC),支持协议互转。",-1),F=e("li",null,"使用多路复用/多线程/异步网络IO模式开发，并发性能优越，支持海量客户端连接。",-1),B=e("li",null,"代码经过长期大量的稳定性、性能测试，已经在线上商用验证已久。",-1),N=e("li",null,"支持linux、macos、ios、android、windows全平台。",-1),Q=e("li",null,"支持x86、arm、risc-v、mips、龙芯、申威等指令集平台。",-1),q={href:"https://github.com/ZLMediaKit/ZLMediaKit/tree/master/api/include",target:"_blank",rel:"noopener noreferrer"},Y={href:"https://github.com/ZLMediaKit/ZLMediaKit/tree/master/server",target:"_blank",rel:"noopener noreferrer"},j=e("li",null,"打通了视频监控协议栈与直播协议栈，对RTSP/RTMP支持都很完善。",-1),J=e("li",null,"全面支持H265/H264/AAC/G711/OPUS。",-1),X=e("li",null,"功能完善，支持集群、按需转协议、按需推拉流、先播后推、断连续推等功能。",-1),$=e("li",null,"极致性能，单机10W级别播放器，100Gb/s级别io带宽能力。",-1),ee={href:"https://github.com/ZLMediaKit/ZLMediaKit/issues/511",target:"_blank",rel:"noopener noreferrer"},le=e("li",null,"全面支持ipv6网络",-1),ie=o('<h2 id="项目定位" tabindex="-1"><a class="header-anchor" href="#项目定位" aria-hidden="true">#</a> 项目定位</h2><ul><li>移动嵌入式跨平台流媒体解决方案。</li><li>商用级流媒体服务器。</li><li>网络编程二次开发SDK。</li></ul><h2 id="功能清单" tabindex="-1"><a class="header-anchor" href="#功能清单" aria-hidden="true">#</a> 功能清单</h2><h3 id="功能一览" tabindex="-1"><a class="header-anchor" href="#功能一览" aria-hidden="true">#</a> 功能一览</h3>',4),te=o("<li><p>RTSP[S]</p><ul><li>RTSP[S] 服务器，支持RTMP/MP4/HLS转RTSP[S],支持亚马逊echo show这样的设备</li><li>RTSP[S] 播放器，支持RTSP代理，支持生成静音音频</li><li>RTSP[S] 推流客户端与服务器</li><li>支持 <code>rtp over udp</code> <code>rtp over tcp</code> <code>rtp over http</code> <code>rtp组播</code> 四种RTP传输方式</li><li>服务器/客户端完整支持Basic/Digest方式的登录鉴权，全异步可配置化的鉴权接口</li><li>支持H265编码</li><li>服务器支持RTSP推流(包括<code>rtp over udp</code> <code>rtp over tcp</code>方式)</li><li>支持H264/H265/AAC/G711/OPUS/MJPEG编码，其他编码能转发但不能转协议</li></ul></li>",1),se=e("p",null,"RTMP[S]",-1),ae=e("li",null,"RTMP[S] 播放服务器，支持RTSP/MP4/HLS转RTMP",-1),oe=e("li",null,"RTMP[S] 发布服务器，支持录制发布流",-1),ne=e("li",null,"RTMP[S] 播放器，支持RTMP代理，支持生成静音音频",-1),re=e("li",null,"RTMP[S] 推流客户端",-1),de=e("li",null,"支持http[s]-flv直播服务器",-1),ce=e("li",null,"支持http[s]-flv直播播放器",-1),he=e("li",null,"支持websocket-flv直播",-1),pe=e("li",null,"支持H264/H265/AAC/G711/OPUS编码，其他编码能转发但不能转协议",-1),ue={href:"https://github.com/ksvc/FFmpeg/wiki",target:"_blank",rel:"noopener noreferrer"},_e={href:"https://github.com/veovera/enhanced-rtmp",target:"_blank",rel:"noopener noreferrer"},me=o("<li><p>HLS</p><ul><li>支持HLS文件(mpegts/fmp4)生成，自带HTTP文件服务器</li><li>通过cookie追踪技术，可以模拟HLS播放为长连接，可以实现HLS按需拉流、播放统计等业务</li><li>支持HLS播发器，支持拉流HLS转rtsp/rtmp/mp4</li><li>支持H264/H265/AAC/G711/OPUS编码</li></ul></li><li><p>TS</p><ul><li>支持http[s]-ts直播</li><li>支持ws[s]-ts直播</li><li>支持H264/H265/AAC/G711/OPUS编码</li></ul></li><li><p>fMP4</p><ul><li>支持http[s]-fmp4直播</li><li>支持ws[s]-fmp4直播</li><li>支持H264/H265/AAC/G711/OPUS/MJPEG编码</li></ul></li><li><p>HTTP[S]与WebSocket</p><ul><li>服务器支持<code>目录索引生成</code>,<code>文件下载</code>,<code>表单提交请求</code></li><li>客户端提供<code>文件下载器(支持断点续传)</code>,<code>接口请求器</code>,<code>文件上传器</code></li><li>完整HTTP API服务器，可以作为web后台开发框架</li><li>支持跨域访问</li><li>支持http客户端、服务器cookie</li><li>支持WebSocket服务器和客户端</li><li>支持http文件访问鉴权</li></ul></li><li><p>GB28181与RTP推流</p><ul><li>支持UDP/TCP RTP(PS/TS/ES)推流服务器，可以转换成RTSP/RTMP/HLS等协议</li><li>支持RTSP/RTMP/HLS等协议转rtp推流客户端，支持TCP/UDP模式，提供相应restful api，支持主动被动方式</li><li>支持H264/H265/AAC/G711/OPUS编码</li><li>支持es/ps/ts/ehome rtp推流</li><li>支持es/ps rtp转推</li><li>支持GB28181主动拉流模式</li><li>支持双向语音对讲</li></ul></li><li><p>MP4点播与录制</p><ul><li>支持录制为FLV/HLS/MP4</li><li>RTSP/RTMP/HTTP-FLV/WS-FLV支持MP4文件点播，支持seek</li><li>支持H264/H265/AAC/G711/OPUS编码</li></ul></li><li><p>WebRTC</p><ul><li>支持WebRTC推流，支持转其他协议</li><li>支持WebRTC播放，支持其他协议转WebRTC</li><li>支持双向echo test</li><li>支持simulcast推流</li><li>支持上下行rtx/nack丢包重传</li><li><strong>支持单端口、多线程、客户端网络连接迁移(开源界唯一)</strong>。</li><li>支持TWCC rtcp动态调整码率</li><li>支持remb/pli/sr/rr rtcp</li><li>支持rtp扩展解析</li><li>支持GOP缓冲，webrtc播放秒开</li><li>支持datachannel</li><li>支持webrtc over tcp模式</li><li>优秀的nack、jitter buffer算法, 抗丢包能力卓越</li><li>支持whip/whep协议</li></ul></li>",7),be=o("<li><p>其他</p><ul><li>支持丰富的restful api以及web hook事件</li><li>支持简单的telnet调试</li><li>支持配置文件热加载</li><li>支持流量统计、推拉流鉴权等事件</li><li>支持虚拟主机,可以隔离不同域名</li><li>支持按需拉流，无人观看自动关断拉流</li><li>支持先播放后推流，提高及时推流画面打开率</li><li>提供完整强大的c api sdk</li><li>支持FFmpeg拉流代理任意格式的流</li><li>支持http api生成并返回实时截图</li><li>支持按需解复用、转协议，当有人观看时才开启转协议，降低cpu占用率</li><li>支持溯源模式的集群部署，溯源方式支持rtsp/rtmp/hls/http-ts, 边沿站支持hls, 源站支持多个(采用round robin方式溯源)</li><li>rtsp/rtmp/webrtc推流异常断开后，可以在超时时间内重连推流，播放器无感知</li></ul></li>",1),ge=e("h2",{id:"编译以及测试",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#编译以及测试","aria-hidden":"true"},"#"),l(" 编译以及测试")],-1),fe=e("h2",{id:"怎么使用",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#怎么使用","aria-hidden":"true"},"#"),l(" 怎么使用")],-1),ke=e("p",null,"你有三种方法使用ZLMediaKit，分别是：",-1),Me={href:"https://github.com/ZLMediaKit/ZLMediaKit/tree/master/api/include",target:"_blank",rel:"noopener noreferrer"},Te={href:"https://github.com/ZLMediaKit/ZLMediaKit/tree/master/tests",target:"_blank",rel:"noopener noreferrer"},Se=o(`<h2 id="docker-镜像" tabindex="-1"><a class="header-anchor" href="#docker-镜像" aria-hidden="true">#</a> Docker 镜像</h2><p>你可以从Docker Hub下载已经编译好的镜像并启动它：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment">#此镜像为github持续集成自动编译推送，跟代码(master分支)保持最新状态</span>
<span class="token function">docker</span> run <span class="token parameter variable">-id</span> <span class="token parameter variable">-p</span> <span class="token number">1935</span>:1935 <span class="token parameter variable">-p</span> <span class="token number">8080</span>:80 <span class="token parameter variable">-p</span> <span class="token number">8443</span>:443 <span class="token parameter variable">-p</span> <span class="token number">8554</span>:554 <span class="token parameter variable">-p</span> <span class="token number">10000</span>:10000 <span class="token parameter variable">-p</span> <span class="token number">10000</span>:10000/udp <span class="token parameter variable">-p</span> <span class="token number">8000</span>:8000/udp <span class="token parameter variable">-p</span> <span class="token number">9000</span>:9000/udp zlmediakit/zlmediakit:master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>你也可以根据Dockerfile编译镜像：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">bash</span> build_docker_images.sh
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,5);function Pe(Le,ve){const t=n("ExternalLinkIcon"),s=n("RouterLink"),r=n("Mermaid");return c(),h("div",null,[u,e("p",null,[e("a",_,[m,i(t)]),b,e("a",g,[f,i(t)]),k,e("a",M,[T,i(t)]),S,e("a",P,[L,i(t)])]),e("p",null,[e("a",v,[R,i(t)]),w,e("a",H,[K,i(t)]),Z,e("a",z,[x,i(t)]),C,e("a",A,[y,i(t)])]),e("p",null,[e("a",G,[O,i(t)]),I,e("a",V,[U,i(t)])]),W,e("ul",null,[D,E,F,B,N,Q,e("li",null,[l("支持画面秒开、极低延时("),i(s,{to:"/zh/reference/test/delay_test.html"},{default:a(()=>[l("500毫秒内，最低可达100毫秒")]),_:1}),l(")。")]),e("li",null,[l("提供完善的标准"),e("a",q,[l("C API"),i(t)]),l(",可以作SDK用，或供其他语言调用。")]),e("li",null,[l("提供完整的"),e("a",Y,[l("MediaServer"),i(t)]),l("服务器，可以免开发直接部署为商用服务器。")]),e("li",null,[l("提供完善的"),i(s,{to:"/zh/guide/media_server/restful_api.html"},{default:a(()=>[l("restful api")]),_:1}),l("以及"),i(s,{to:"/zh/guide/media_server/web_hook_api.html"},{default:a(()=>[l("web hook")]),_:1}),l("，支持丰富的业务逻辑。")]),j,J,X,$,e("li",null,[l("极致体验，"),i(s,{to:"/zh/reference/documents/exclusive_features.html"},{default:a(()=>[l("独家特性")]),_:1})]),e("li",null,[e("a",ee,[l("谁在使用zlmediakit?"),i(t)])]),le]),ie,i(r,{id:"mermaid-128",code:"eJx1k99PgzAQx9/3V/QRH4jR+GB8MGHQyTKQhnYz2iwLYcyRzLGwTmOc/7vXH9BNGAn0eve5b69H67ruQJRiUzygUZGJQ13sB9K32lRf+TqrBWLBAMHj8ZTFZI5c9/FIpjRESYrINIqOaOiMt3n1UW7f0V7URaasXV2JKq82VzpZZtP+bAN4PGSMuIxeq3EUza7DiDYZZ6RBY3LXDT8Nb+9v7m+4Ge2KDfCChynzuR66YZoyDm83gMMkxlx9u8HxM5myRcJCnPJErIu63b+tEM3GHhqNYoKfmrShDCL/5y2Ki2WZTUrxq/y+9Ac8OYjdQfQ0da6oQGXLMihLsRfzVfawytw8qxE57Nc2z+BAQ8tS7Cdp4ICF6iKv6iUA+idJQLeFRN6ro00TkktF4xk2K0XlZ2H0rTi0TSXCiHab7NuqzpLAgVc7rAxE5Klw5AdJyR4AzsFCOhwwLjFwTjQDhjpAMECf7y7xzOCMXlwVss2y5zq226b4hfSoHfQCcQvEfYA5pZoxE401+25VTiROYvIiLOScOM216TDwI2niTzAzYDu3tOlIIwhTo8fof8CqKcqKNWjbu7Y86WjqA7uLnVSo2ZMSVcIfdihA0w=="}),e("ul",null,[te,e("li",null,[se,e("ul",null,[ae,oe,ne,re,de,ce,he,pe,e("li",null,[l("支持"),e("a",ue,[l("RTMP-H265"),i(t)])]),e("li",null,[l("支持"),i(s,{to:"/zh/reference/resources/rtmp_support_for_h265_and_opus.html"},{default:a(()=>[l("RTMP-OPUS")]),_:1})]),e("li",null,[l("支持"),e("a",_e,[l("enhanced-rtmp(H265)"),i(t)])])])]),me,e("li",null,[e("p",null,[i(s,{to:"/zh/guide/protocol/srt/"},{default:a(()=>[l("SRT支持")]),_:1})])]),be]),ge,e("p",null,[e("strong",null,[l("编译前务必仔细参考wiki:"),i(s,{to:"/zh/tutorial/"},{default:a(()=>[l("快速开始")]),_:1}),l("操作!!!")])]),fe,ke,e("ul",null,[e("li",null,[l("1、使用c api，作为sdk使用，请参考"),e("a",Me,[l("这里"),i(t)]),l(".")]),e("li",null,[l("2、作为独立的流媒体服务器使用，不想做c/c++开发的，可以参考 "),i(s,{to:"/zh/guide/media_server/restful_api.html"},{default:a(()=>[l("restful api")]),_:1}),l(" 和 "),i(s,{to:"/zh/guide/media_server/web_hook_api.html"},{default:a(()=>[l("web hook")]),_:1}),l(".")]),e("li",null,[l("3、如果想做c/c++开发，添加业务逻辑增加功能，可以参考这里的"),e("a",Te,[l("测试程序"),i(t)]),l(".")])]),Se])}const He=d(p,[["render",Pe],["__file","index.html.vue"]]);export{He as default};
